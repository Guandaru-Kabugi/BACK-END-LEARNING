WEBVTT

1
00:00:00.721 --> 00:00:02.532
- [Narrator] Hi and welcome
back to the programme.

2
00:00:02.532 --> 00:00:06.022
In this video we're going
to look at inheritance.

3
00:00:06.022 --> 00:00:07.705
And as we look at inheritance,

4
00:00:07.705 --> 00:00:10.106
We're also going to look
at a very common question,

5
00:00:10.106 --> 00:00:13.526
which is why would you
want to use class method

6
00:00:13.526 --> 00:00:14.943
or static method.

7
00:00:16.992 --> 00:00:19.959
The first thing I'm going to
do is create a class student,

8
00:00:19.959 --> 00:00:22.465
like we have seen in the
past and there's gonna have

9
00:00:22.465 --> 00:00:26.223
an init method with self, name and school.

10
00:00:26.223 --> 00:00:28.699
And then self.name is gonna be name.

11
00:00:28.699 --> 00:00:31.212
Self.school is gonna be school,

12
00:00:31.212 --> 00:00:33.819
self.marks is gonna be an empty list.

13
00:00:33.819 --> 00:00:36.769
So we know this and I'm also
going to create an average

14
00:00:36.769 --> 00:00:40.495
method which is going to return the self

15
00:00:40.495 --> 00:00:44.412
of sum self.marks divided
by len of self.marks.

16
00:00:46.873 --> 00:00:50.395
And I'm also going to add a third method.

17
00:00:50.395 --> 00:00:52.105
Well I'm actually not gonna add it,

18
00:00:52.105 --> 00:00:53.015
you're gonna add it.

19
00:00:53.015 --> 00:00:56.765
And this method should
return another student

20
00:00:58.055 --> 00:01:01.762
who is in the same school
with a different name.

21
00:01:01.762 --> 00:01:05.929
So basically the method
is gonna be called friend.

22
00:01:07.313 --> 00:01:12.120
And what it should do is
should return a new student

23
00:01:12.120 --> 00:01:15.953
called friend name in
the same school as self.

24
00:01:21.476 --> 00:01:22.659
Give that a go.

25
00:01:22.659 --> 00:01:24.487
Pause the video and think about it

26
00:01:24.487 --> 00:01:25.507
for a few minutes, and try

27
00:01:25.507 --> 00:01:27.947
to implement what this would look like.

28
00:01:27.947 --> 00:01:31.113
It's not a trick question,
just try to do it as

29
00:01:31.113 --> 00:01:34.382
you think you might wanna do this.

30
00:01:34.382 --> 00:01:38.549
You might wanna return a new
student in the same school.

31
00:01:43.545 --> 00:01:46.641
Okay, hopefully you've
managed, and what I'm gonna do

32
00:01:46.641 --> 00:01:50.808
is just say really return,
student, and this student

33
00:01:51.706 --> 00:01:54.741
is gonna be called friend name.

34
00:01:54.741 --> 00:01:56.228
And that's the perimeter.

35
00:01:56.228 --> 00:01:58.632
Friend name then goes into name,

36
00:01:58.632 --> 00:02:00.565
so all we're missing is the school,

37
00:02:00.565 --> 00:02:02.648
it should be self.school.

38
00:02:06.410 --> 00:02:07.243
Right?

39
00:02:11.874 --> 00:02:12.771
Perfect.

40
00:02:12.771 --> 00:02:14.420
So how does this work?

41
00:02:14.420 --> 00:02:16.220
Let's create a student called Anna,

42
00:02:16.220 --> 00:02:18.558
that's gonna be a student called Anna,

43
00:02:18.558 --> 00:02:22.371
and going to Oxford, and then the friend

44
00:02:22.371 --> 00:02:24.371
is gonna be Anna.friend.

45
00:02:25.573 --> 00:02:28.402
And now we only need Greg,
because we can assume

46
00:02:28.402 --> 00:02:29.969
the friend is in the same school.

47
00:02:29.969 --> 00:02:32.295
This may not be true, but nevertheless.

48
00:02:32.295 --> 00:02:33.962
For the example, so.

49
00:02:35.089 --> 00:02:38.089
Friend.name and print friend.school,

50
00:02:39.204 --> 00:02:42.450
and we know what this should give us.

51
00:02:42.450 --> 00:02:45.117
And it does say Greg and Oxford.

52
00:02:51.488 --> 00:02:53.155
Okay, so, very good.

53
00:02:54.649 --> 00:02:57.872
The point of this video
was to cover inheritance.

54
00:02:57.872 --> 00:02:59.372
So, let's do that.

55
00:03:06.856 --> 00:03:11.561
I've created another class
called working student,

56
00:03:11.561 --> 00:03:14.087
but now there's a couple
of brackets at the end,

57
00:03:14.087 --> 00:03:17.587
and inside the brackets we've got student.

58
00:03:18.738 --> 00:03:22.905
What happens here is that
the class working student,

59
00:03:24.327 --> 00:03:28.564
contains all of the stuff
that student contains.

60
00:03:28.564 --> 00:03:33.354
So you can essentially think
of it as a copy and paste.

61
00:03:33.354 --> 00:03:34.621
Okay?

62
00:03:34.621 --> 00:03:36.204
If we type in pass.

63
00:03:38.116 --> 00:03:40.169
As you will be able to see in a moment,

64
00:03:40.169 --> 00:03:44.483
if we say something like cut
this, remove it from there

65
00:03:44.483 --> 00:03:46.368
and put it down here, but
instead of student say

66
00:03:46.368 --> 00:03:50.700
working student, you should
see the same thing printed out.

67
00:03:50.700 --> 00:03:51.617
And you do.

68
00:03:52.881 --> 00:03:57.458
Okay, so think of it as a
copy and paste essentially.

69
00:03:57.458 --> 00:04:01.208
However, when we inherit
things, for example,

70
00:04:02.494 --> 00:04:06.661
when an animal inherits some
traits from the parents,

71
00:04:08.431 --> 00:04:10.474
that does not mean cloning.

72
00:04:10.474 --> 00:04:14.155
It means inheriting, and there
are some differences as well.

73
00:04:14.155 --> 00:04:16.925
And here's the same thing,
so we can reimplement

74
00:04:16.925 --> 00:04:19.670
for example the init method,

75
00:04:19.670 --> 00:04:21.003
with more stuff.

76
00:04:27.479 --> 00:04:31.497
So here, the init method
of a working student

77
00:04:31.497 --> 00:04:34.497
is gonna be name, school and salary.

78
00:04:37.116 --> 00:04:39.098
If we were to copy and paste,

79
00:04:39.098 --> 00:04:41.681
we would do something like this

80
00:04:44.701 --> 00:04:46.914
to assign the properties,

81
00:04:46.914 --> 00:04:49.865
but this is duplicated code really,

82
00:04:49.865 --> 00:04:51.961
it's already in student
and it's already in working

83
00:04:51.961 --> 00:04:53.673
student as well.

84
00:04:53.673 --> 00:04:56.776
Since working student
inherits from student,

85
00:04:56.776 --> 00:04:59.609
we must call students init method.

86
00:05:07.681 --> 00:05:09.874
So this looks rather
confusing, but there's nothing

87
00:05:09.874 --> 00:05:12.128
to be confused about.

88
00:05:12.128 --> 00:05:15.679
What we've got is the super class student.

89
00:05:15.679 --> 00:05:19.399
Student is a super class
because it's the class above.

90
00:05:19.399 --> 00:05:23.144
And then we're gonna call
that class's init method,

91
00:05:23.144 --> 00:05:24.878
which is this one here,

92
00:05:24.878 --> 00:05:28.684
and that is going to set
name, school and marks.

93
00:05:28.684 --> 00:05:30.570
Name, school and marks
here, and then we're

94
00:05:30.570 --> 00:05:34.789
gonna set the salary just
as we would normally.

95
00:05:34.789 --> 00:05:37.214
So think of it again as a copy and paste,

96
00:05:37.214 --> 00:05:40.019
all we're doing really is
calling this init method

97
00:05:40.019 --> 00:05:43.166
which does these things here.

98
00:05:43.166 --> 00:05:43.999
Okay.

99
00:05:46.325 --> 00:05:50.492
So, now, what we can do is
we can print for example,

100
00:05:52.060 --> 00:05:56.204
print, Anna.salary, if
we give her a salary,

101
00:05:56.204 --> 00:05:58.204
such as 20 quid an hour.

102
00:06:00.742 --> 00:06:02.084
Okay, so let's do that.

103
00:06:02.084 --> 00:06:03.359
Let's run this programme.

104
00:06:03.359 --> 00:06:05.745
What do you think is gonna
happen when we run it?

105
00:06:05.745 --> 00:06:08.718
Are we gonna get errors, are
we gonna print things out,

106
00:06:08.718 --> 00:06:09.779
what do you think is gonna happen?

107
00:06:09.779 --> 00:06:10.862
Take a guess.

108
00:06:17.955 --> 00:06:20.152
Hopefully you didn't say an error,

109
00:06:20.152 --> 00:06:22.694
because no error has come out.

110
00:06:22.694 --> 00:06:25.703
What we've received is Anna's salary,

111
00:06:25.703 --> 00:06:29.370
and also the friend's
name and school again.

112
00:06:30.246 --> 00:06:32.913
Now here comes the trick though.

113
00:06:35.443 --> 00:06:39.193
Surely, the friend should
also have a salary.

114
00:06:43.929 --> 00:06:47.179
So what happens when we print that out?

115
00:06:50.348 --> 00:06:51.577
And I'm sure you know by now.

116
00:06:51.577 --> 00:06:53.185
Whether there's a phrase to this

117
00:06:53.185 --> 00:06:56.268
question, but it is a bit of a trick.

118
00:06:57.337 --> 00:06:59.573
But this time we get an attribute error.

119
00:06:59.573 --> 00:07:02.230
An attribute error happens
when we try to access

120
00:07:02.230 --> 00:07:04.887
a property of an object, but that object

121
00:07:04.887 --> 00:07:07.020
does not have the property.

122
00:07:07.020 --> 00:07:11.267
So here we've tried to
access the friend's salary,

123
00:07:11.267 --> 00:07:14.200
but it's telling us that a student object

124
00:07:14.200 --> 00:07:16.277
has no attribute salary.

125
00:07:16.277 --> 00:07:20.027
Wait a minute, Anna was
your working student,

126
00:07:20.994 --> 00:07:23.244
how come Greg is a student?

127
00:07:25.216 --> 00:07:26.383
Well, why not?

128
00:07:27.305 --> 00:07:30.519
That's the way that friend was defined,

129
00:07:30.519 --> 00:07:33.269
so that's still gonna be the case

130
00:07:34.888 --> 00:07:37.056
if we think of it as a copy and paste.

131
00:07:37.056 --> 00:07:39.122
The friend is still
gonna return a student,

132
00:07:39.122 --> 00:07:43.468
it's not gonna return a
working student magically.

133
00:07:43.468 --> 00:07:45.801
So this doesn't really work.

134
00:07:47.914 --> 00:07:52.081
So, this is where you would
use CLS, class method.

135
00:07:55.778 --> 00:07:59.445
If we make the friend
method a class method,

136
00:08:01.196 --> 00:08:05.196
oh again, class method,
then we can remove self,

137
00:08:06.798 --> 00:08:08.465
replacing it by CLS,

138
00:08:11.171 --> 00:08:14.116
CLS remember is a reference to the class

139
00:08:14.116 --> 00:08:16.923
of the thing that is calling it,

140
00:08:16.923 --> 00:08:19.590
so we can replace CLS like that,

141
00:08:21.375 --> 00:08:24.113
and then when we called Anna.friend,

142
00:08:24.113 --> 00:08:27.209
Anna is a working student object,

143
00:08:27.209 --> 00:08:30.542
so CLS is not friend is working student.

144
00:08:31.573 --> 00:08:35.323
Sorry it's not student,
it's working student.

145
00:08:37.202 --> 00:08:39.487
Hopefully that was clear enough.

146
00:08:39.487 --> 00:08:43.654
So now when we copy and
paste this thing down here,

147
00:08:44.694 --> 00:08:47.584
it is a proper copy and paste

148
00:08:47.584 --> 00:08:50.483
and this is a working student.

149
00:08:50.483 --> 00:08:54.650
So when we call this method
from a working student object,

150
00:08:55.870 --> 00:08:57.797
CLS will be working student

151
00:08:57.797 --> 00:09:00.880
and we will return a working student.

152
00:09:02.780 --> 00:09:04.800
But we don't need to
actually copy and paste it,

153
00:09:04.800 --> 00:09:08.160
because when we inherit,
we're in a different type of

154
00:09:08.160 --> 00:09:12.327
student calls it, then we
use the appropriate friend.

155
00:09:14.477 --> 00:09:17.144
However, it cannot be that easy.

156
00:09:18.612 --> 00:09:20.130
So what do you think is gonna happen when

157
00:09:20.130 --> 00:09:21.547
we run this code?

158
00:09:25.858 --> 00:09:30.025
See if you can think exactly
what error is gonna be raised.

159
00:09:38.502 --> 00:09:41.419
Obviously there had to be problems.

160
00:09:43.843 --> 00:09:46.680
We've got self is not defined now.

161
00:09:46.680 --> 00:09:50.150
So we try and accessing self.school

162
00:09:50.150 --> 00:09:52.150
but we couldn't do that.

163
00:09:53.683 --> 00:09:56.100
So what we have to do is now,

164
00:09:57.975 --> 00:10:00.630
the friend doesn't have access to self,

165
00:10:00.630 --> 00:10:04.797
so we cannot take the
school from the object Anna.

166
00:10:05.795 --> 00:10:09.378
We have to have some
sort of origin object.

167
00:10:11.788 --> 00:10:14.371
And then when we do the friend,

168
00:10:16.778 --> 00:10:21.657
we have to do something
like working student.friend.

169
00:10:21.657 --> 00:10:23.413
And the origin is gonna be Anna.

170
00:10:23.413 --> 00:10:24.746
Our object Anna.

171
00:10:25.603 --> 00:10:28.697
And now Anna's gonna be the origin,

172
00:10:28.697 --> 00:10:30.784
Greg is gonna be the friend name,

173
00:10:30.784 --> 00:10:34.484
and we're gonna create a
new student with that name

174
00:10:34.484 --> 00:10:37.247
and that origin's school.

175
00:10:37.247 --> 00:10:40.682
So this is getting
slightly more complicated.

176
00:10:40.682 --> 00:10:43.102
Slightly more complicated.

177
00:10:43.102 --> 00:10:44.770
Let's save that and run it again.

178
00:10:44.770 --> 00:10:48.270
And what do you think is gonna happen now?

179
00:10:54.217 --> 00:10:57.692
I wouldn't really expect
you to be able to guess it.

180
00:10:57.692 --> 00:11:00.416
But, now we have another trace back

181
00:11:00.416 --> 00:11:04.583
and the type error which says
the init method is missing

182
00:11:05.716 --> 00:11:09.133
one required positional argument, salary.

183
00:11:13.222 --> 00:11:17.036
And they would be right,
because working student

184
00:11:17.036 --> 00:11:20.915
is the class, but working
students init method

185
00:11:20.915 --> 00:11:24.462
has three properties that
need to be passed in.

186
00:11:24.462 --> 00:11:27.715
And when we run it here, we're
only passing two properties

187
00:11:27.715 --> 00:11:31.882
in, so we need a third
property there, the salary.

188
00:11:36.764 --> 00:11:37.724
Hmmm.

189
00:11:37.724 --> 00:11:40.057
This is getting complicated.

190
00:11:41.193 --> 00:11:44.597
And after, we probably don't
wanna hard code the salary,

191
00:11:44.597 --> 00:11:47.083
so we'll have to put in the salary here,

192
00:11:47.083 --> 00:11:49.573
and then we'll have to
put in a salary here.

193
00:11:49.573 --> 00:11:51.230
And then when we do the friend,

194
00:11:51.230 --> 00:11:54.058
we'll have to give Greg a salary like so,

195
00:11:54.058 --> 00:11:57.225
and then we can run this
and everything works

196
00:11:57.225 --> 00:12:01.225
and we can even print the
friend's salary there.

197
00:12:02.281 --> 00:12:04.797
And as you can see we get 17.5,

198
00:12:04.797 --> 00:12:06.956
because that's the class,

199
00:12:06.956 --> 00:12:09.789
the object that we created rather.

200
00:12:14.286 --> 00:12:17.916
Now, hopefully that all makes sense.

201
00:12:17.916 --> 00:12:21.218
And what we're going to look
at in the very next video

202
00:12:21.218 --> 00:12:25.231
is a way to simplify this code slightly.

203
00:12:25.231 --> 00:12:28.354
And a way to make it a bit better.

204
00:12:28.354 --> 00:12:30.848
So stick with me and I'll see
you in the very next video,

205
00:12:30.848 --> 00:12:33.911
and we're gonna try to simplify this,

206
00:12:33.911 --> 00:12:37.313
make it a bit nicer,
so that it doesn't grow

207
00:12:37.313 --> 00:12:40.861
more and more complicated
every step of the way.

208
00:12:40.861 --> 00:12:42.639
So I'll see you in the very next video,

209
00:12:42.639 --> 00:12:44.042
and I'll catch you there.

